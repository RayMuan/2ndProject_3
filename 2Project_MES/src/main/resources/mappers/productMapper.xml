<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- src/main/resources -->
<!-- mybatis-config.xml 파일 만들기 -->
<!--  파일이름 대신 namespace 이름을 불러서 사용 -->
<mapper namespace="com.project.mappers.productMapper">
	

<!-- 	 ? 대신에 MemberDTO 멤버변수명 #{id}	 -->
    
   	 <insert id="insertProduct"> 
     	insert into product(prod_cd,prod_number,cli_cd,prod_nm,prod_mat,prod_unit,prod_text,prod_size,prod_inprice,prod_outprice,prod_count,prod_note)  
     	select
		concat('P',
		lpad(coalesce(substring(max(prod_cd), 2), 0) + 1, 3, '0')),
     	#{prod_number},#{cli_cd},#{prod_nm},#{prod_mat},#{prod_unit},#{prod_text},#{prod_size},#{prod_inprice},#{prod_outprice}, 
     	#{prod_count},#{prod_note}
     	from product
   	</insert>
   	
   	 
    <select id="getMaxnum" resultType="java.lang.Integer">
    	select max(prod_number) from product
    </select>
    
    <select id="getProductList" resultType="com.project.domain.ProductDTO">
    	select * from product
    	<if test="search != null">
        where prod_cd like CONCAT('%',#{search},'%') or prod_nm like CONCAT('%',#{search},'%') or prod_mat like CONCAT('%',#{search},'%')
        </if> 
    	order by prod_number desc
  
    	limit #{startRow}, #{pageSize}
    </select>
    
    
      <select id="getProductCount" resultType="java.lang.Integer">
    	select count(*) from product
    	<if test="search != null">
        	where prod_cd like CONCAT('%',#{search},'%') or prod_nm like CONCAT('%',#{search},'%')or prod_mat like CONCAT('%',#{search},'%')
        </if> 
    </select>
    
     <select id="getProduct" resultType="com.project.domain.ProductDTO">
    	select * from product where prod_number = #{prod_number}
    </select>
    
    <update id="updateProduct">
    	update product set
    	prod_cd = #{prod_cd}, 
    	prod_nm = #{prod_nm},
    	prod_mat = #{prod_mat},
    	prod_unit = #{prod_unit},
    	prod_text = #{prod_text},
    	prod_size = #{prod_size},
    	prod_inprice = #{prod_inprice},
    	prod_outprice = #{prod_outprice},
    	prod_note = #{prod_note}
    	where prod_number = #{prod_number}
    </update>
    <!-- daolmpl 이름이랑 같아야한다. -->
    <delete id="deleteProduct">
    delete from product
    where prod_number = #{prod_number}
    </delete>
     
	<select id="getService" resultType="com.project.domain.ProductDTO">
	select * 
    from product 
    where title like '%service%'
    order by prod_number desc 
    limit 10, 10;
	
	</select>

<!--     <select id="" resultType=""> -->
<!--     </select> -->

<!-- 	<update id=""> -->
<!-- 	</update> -->

<!-- 	<delete id=""> -->
<!-- 	</delete> -->
			
</mapper>